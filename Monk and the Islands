#include<bits/stdc++.h>
using namespace std;
void bfs(int sv,int n,bool *visited,vector<int>* adj){
	queue<int> q;
	q.push(sv);
	visited[sv] = true;
	int *level = new int[n+1];
	level[sv] = 0;
	while(!q.empty()){
		sv = q.front();
		q.pop();
		for(int i=0;i<adj[sv].size();i++){
			if(!visited[adj[sv][i]]){
				visited[adj[sv][i]] = true;
				q.push(adj[sv][i]);	
				level[adj[sv][i]] = level[sv] + 1;
			}
		}
	}
	cout<<level[n]<<endl;
}
int main(){
	int t;
	cin>>t;
	while(t--){
		int V,E;
		cin>>V>>E;
		vector<int> *adj = new vector<int>[V];
		for(int i = 0;i<E;i++){
			int f,s;
			cin>>f>>s;
			adj[f-1].push_back(s-1);
			adj[s-1].push_back(f-1);
		}
	bool *visited = new bool[V]();
	bfs(0,V-1,visited,adj);	
}
	
	return 0;
	
}
