void printDFS(int **edges,int V,bool *visited,int sv){
	cout<<sv<<" ";
	visited[sv] = true;
	for(int i=0;i<V;i++){
		
		if(visited[i]){
			continue;
		}
		if(edges[sv][i]==1){
			printDFS(edges,V,visited,i);
		}
		
	}
}
void printBFS(int **edges,int V,bool *visited,int sv){
	queue <int> remainingVertices;
	remainingVertices.push(sv);
	visited[sv] = true;
	while(!remainingVertices.empty()){
		
		int d = remainingVertices.front();
		remainingVertices.pop();
		cout<<d<<" ";		
		
		for(int i=0;i<V;i++){
			if(visited[i]){
			continue;
			}
			if(edges[d][i]==1){
			remainingVertices.push(i);
			visited[i] = true;
			}	
		
		}	
	}	
}
//Only functions 
